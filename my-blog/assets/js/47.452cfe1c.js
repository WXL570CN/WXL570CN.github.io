(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{465:function(r,a,e){"use strict";e.r(a);var t=e(2),s=Object(t.a)({},(function(){var r=this,a=r._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[a("h2",{attrs:{id:"_1、常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、常用方法"}},[r._v("#")]),r._v(" 1、常用方法")]),r._v(" "),a("p",[a("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_pop.asp",target:"_blank",rel:"noopener noreferrer"}},[r._v("pop()"),a("OutboundLink")],1),r._v("：删除数组的最后一个元素，并返回该元素。")]),r._v(" "),a("p",[a("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_shift.asp",target:"_blank",rel:"noopener noreferrer"}},[r._v("shift()"),a("OutboundLink")],1),r._v("： 删除数组的第一个元素，并返回该元素。")]),r._v(" "),a("p",[a("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_unshift.asp",target:"_blank",rel:"noopener noreferrer"}},[r._v("unshift()"),a("OutboundLink")],1),r._v("： 将新元素添加到数组的开头，并返回新的长度。")]),r._v(" "),a("p",[a("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_splice.asp",target:"_blank",rel:"noopener noreferrer"}},[r._v("splice()"),a("OutboundLink")],1),r._v("： 从数组中添加/删除元素。 改变原数组")]),r._v(" "),a("p",[a("a",{attrs:{href:"https://www.w3school.com.cn/jsref/jsref_slice_array.asp",target:"_blank",rel:"noopener noreferrer"}},[r._v("slice()"),a("OutboundLink")],1),r._v("： 选择数组的一部分，并返回新数组。 不改变原数组")]),r._v(" "),a("h2",{attrs:{id:"_2、flatmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、flatmap"}},[r._v("#")]),r._v(" 2、flatMap")]),r._v(" "),a("p",[r._v("flatMap可获取对象数组中，对象中的某个数据集合")]),r._v(" "),a("p",[r._v("如：")]),r._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[r._v("let arr = [\n { a: [1, 2, 3] },\n { a: [2, 3, 4] }\n]\narr.flatMap(item => item.a)\n//  [1, 2, 2, 3, 3, 4]\n")])]),r._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[r._v("1")]),a("br"),a("span",{staticClass:"line-number"},[r._v("2")]),a("br"),a("span",{staticClass:"line-number"},[r._v("3")]),a("br"),a("span",{staticClass:"line-number"},[r._v("4")]),a("br"),a("span",{staticClass:"line-number"},[r._v("5")]),a("br"),a("span",{staticClass:"line-number"},[r._v("6")]),a("br")])]),a("h2",{attrs:{id:"_3、for循环、foreach和map的对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、for循环、foreach和map的对比"}},[r._v("#")]),r._v(" 3、"),a("a",{attrs:{href:"https://mp.weixin.qq.com/s/3G_LMpz_W3ABFFmDQr1Yjg",target:"_blank",rel:"noopener noreferrer"}},[r._v("for循环、forEach和map的对比"),a("OutboundLink")],1)]),r._v(" "),a("p",[a("strong",[r._v("性能比较 ：")])]),r._v(" "),a("p",[r._v("for > forEach > map 在chrome 62 和 Node.js v9.1.0环境下：for 循环比 forEach 快1倍，forEach 比 map 快20%左右。")]),r._v(" "),a("p",[a("strong",[r._v("原因分析：")])]),r._v(" "),a("p",[r._v("for：for循环没有额外的函数调用栈和上下文，所以它的实现最为简单。")]),r._v(" "),a("p",[r._v("forEach：对于forEach来说，它的函数签名中包含了参数和上下文，所以性能会低于 for 循环。")]),r._v(" "),a("p",[r._v("map：map 最慢的原因是因为 map 会返回一个新的数组，数组的创建和赋值会导致分配内存空间，因此会带来较大的性能开销。")]),r._v(" "),a("h2",{attrs:{id:"_4、对象数组去重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、对象数组去重"}},[r._v("#")]),r._v(" 4、对象数组去重")]),r._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[r._v("checkRepeat = (arr， key1,  key2, ...) => {\n    return arr.filter((item, index) => {\n      return arr.findIndex( (item1) => item1[key1] == item[key1] && item1[key2] == item[key2] ) == index\n    })\n}\n")])]),r._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[r._v("1")]),a("br"),a("span",{staticClass:"line-number"},[r._v("2")]),a("br"),a("span",{staticClass:"line-number"},[r._v("3")]),a("br"),a("span",{staticClass:"line-number"},[r._v("4")]),a("br"),a("span",{staticClass:"line-number"},[r._v("5")]),a("br")])]),a("h2",{attrs:{id:"_5、注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、注意事项"}},[r._v("#")]),r._v(" 5、注意事项")]),r._v(" "),a("p",[r._v("for in不适合遍历数组")])])}),[],!1,null,null,null);a.default=s.exports}}]);