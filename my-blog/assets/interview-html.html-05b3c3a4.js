import{_ as e,p as t,q as i,s as a,R as n,t as c,Y as l,n as o}from"./framework-e1bed10d.js";const r={},d=a("h1",{id:"「面试」html",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#「面试」html","aria-hidden":"true"},"#"),n(" 「面试」Html")],-1),p={id:"akara的博客",tabindex:"-1"},h=a("a",{class:"header-anchor",href:"#akara的博客","aria-hidden":"true"},"#",-1),u={href:"https://messiahhh.github.io/blog/docs/HTML",target:"_blank",rel:"noopener noreferrer"},m=l(`<h2 id="脚本的加载" tabindex="-1"><a class="header-anchor" href="#脚本的加载" aria-hidden="true">#</a> 脚本的加载</h2><p>script脚本会阻塞html的解析 但多个script脚本的加载是并行的（同时）：因为实际上现代浏览器会对资源进行预解析，提前把html中要引用到的资源放进请求队列中。</p><h2 id="async-和-defer-的区别" tabindex="-1"><a class="header-anchor" href="#async-和-defer-的区别" aria-hidden="true">#</a> async 和 defer 的区别</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">async</span> <span class="token attr-name">...</span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">defer</span> <span class="token attr-name">...</span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>相同点</code>：不会阻塞html的解析<br><code>不同点</code>：</p><ul><li><code>async</code>：html和脚本同时解析，脚本加载完成后立刻开始执行，会阻塞html解析</li><li><code>defer</code>：html和脚本同时解析，html解析完成后才会开始脚本的执行</li></ul><h2 id="domcontentloaded和load的区别" tabindex="-1"><a class="header-anchor" href="#domcontentloaded和load的区别" aria-hidden="true">#</a> DOMContentLoaded和Load的区别</h2><ul><li><code>DOMContentLoaded</code>： 当初始的 HTML 文档被完全加载和解析完成之后，DOMContentLoaded 事件被触发，而无需等待样式表、图像和子框架的完成加载。</li><li><code>Load</code>： 样式表、图像和子框架的完成加载， load 事件被触发。</li></ul><h2 id="href和src的区别" tabindex="-1"><a class="header-anchor" href="#href和src的区别" aria-hidden="true">#</a> href和src的区别</h2><ul><li><code>href</code>： 用于在当前文档和指定资源间确定联系</li><li><code>src</code>： 下载资源并替换当前内容</li></ul><h2 id="link和-import的区别" tabindex="-1"><a class="header-anchor" href="#link和-import的区别" aria-hidden="true">#</a> link和@import的区别</h2><ul><li><code>link</code>是XHTML提供的标签，不仅仅可以加载CSS。<code>@import</code>是CSS提供的语法规则，只能加载CSS。</li><li>加载页面时，<code>link标签</code>引入的 CSS 被同时加载；<code>@import</code>引入的 CSS 将在页面加载完毕后被加载。</li></ul><h2 id="doctype" tabindex="-1"><a class="header-anchor" href="#doctype" aria-hidden="true">#</a> Doctype</h2><p>Doctype声明位于文档中的最前面，处于html标签之前。告知浏览器的解析器，用什么文档类型规范来解析这个文档</p><h2 id="重定向" tabindex="-1"><a class="header-anchor" href="#重定向" aria-hidden="true">#</a> 重定向</h2><h3 id="mata标签" tabindex="-1"><a class="header-anchor" href="#mata标签" aria-hidden="true">#</a> mata标签</h3><ul><li>http-equiv=&quot;refresh&quot;：告诉浏览器进行页面的跳转</li><li>content：告知在多少秒后进行跳转，跳转的地址</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 此处为2s后重定向。 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>refresh<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>2;https://wxl570cn.github.io/my-blog/<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="href" tabindex="-1"><a class="header-anchor" href="#href" aria-hidden="true">#</a> href</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;https://wxl570cn.github.io/my-blog/&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="响应状态码" tabindex="-1"><a class="header-anchor" href="#响应状态码" aria-hidden="true">#</a> 响应状态码</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">301</span> <span class="token comment">// or 302</span>
res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Location&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;https://wxl570cn.github.io/my-blog/&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iframe-的优缺点" tabindex="-1"><a class="header-anchor" href="#iframe-的优缺点" aria-hidden="true">#</a> iframe 的优缺点？</h2><p>优点：</p><ul><li>解决加载缓慢的第三方内容如图标和广告等的加载问题</li><li>Security sandbox</li><li>并行加载脚本</li></ul><p>缺点：</p><ul><li>iframe 会阻塞主页面的 Onload 事件</li><li>即时内容为空，加载也需要时间</li><li>没有语意</li></ul>`,27);function k(g,v){const s=o("ExternalLinkIcon");return t(),i("div",null,[d,a("h2",p,[h,n(),a("a",u,[n("Akara的博客"),c(s)])]),m])}const b=e(r,[["render",k],["__file","interview-html.html.vue"]]);export{b as default};
