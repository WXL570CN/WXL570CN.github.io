import{_ as t,p,q as o,s as n,R as s,t as e,Y as c,n as i}from"./framework-e1bed10d.js";const l={},u=n("h2",{id:"一、nuxt-config-js",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、nuxt-config-js","aria-hidden":"true"},"#"),s(" 一、nuxt.config.js")],-1),r=n("h3",{id:"head",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#head","aria-hidden":"true"},"#"),s(" head")],-1),d={href:"https://github.com/nuxt/vue-meta",target:"_blank",rel:"noopener noreferrer"},k=n("br",null,null,-1),v={href:"https://vue-meta.nuxtjs.org/api/#metainfo-properties",target:"_blank",rel:"noopener noreferrer"},m=c(`<h4 id="htmlattrs" tabindex="-1"><a class="header-anchor" href="#htmlattrs" aria-hidden="true">#</a> htmlAttrs</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>htmlAttrs<span class="token operator">:</span> <span class="token punctuation">{</span>
  lang<span class="token operator">:</span> &#39;zh-CN&#39;<span class="token punctuation">,</span>  <span class="token comment">// 设置网站语言</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、布局-layouts" tabindex="-1"><a class="header-anchor" href="#二、布局-layouts" aria-hidden="true">#</a> 二、布局 layouts</h2><p>引入方式： <code>layout: &#39;布局文件名&#39;</code><br> 可当成page使用，可以使用全部的生命周期</p><h2 id="三、中间件-middleware" tabindex="-1"><a class="header-anchor" href="#三、中间件-middleware" aria-hidden="true">#</a> 三、中间件 middleware</h2><p>页面渲染前执行</p><p>接收 context 作为第一个参数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也就是说Vuex，router, route等在这里是可用的</p><p>引用方式： <code>middleware: &#39;&#39;</code> 或 <code>middleware: [&#39;中间件文件名1&#39;, &#39;中间件文件名2&#39;]</code></p><p>可用于 nuxt.config.js 、 layouts 或者 pages 中使用中间件:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">router</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">middleware</span><span class="token operator">:</span> <span class="token string">&#39;stats&#39;</span>  <span class="token comment">// 每个路由改变时被调用</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不同地方引用的 middleware 也有先后执行顺序</p><ol><li>nuxt.config.js</li><li>匹配布局</li><li>匹配页面</li></ol><h2 id="四、plugins" tabindex="-1"><a class="header-anchor" href="#四、plugins" aria-hidden="true">#</a> 四、plugins</h2><p>运行 js 插件，如axios的封装，第三方库的引入</p><h3 id="_1、往-vue实例-中注入方法" tabindex="-1"><a class="header-anchor" href="#_1、往-vue实例-中注入方法" aria-hidden="true">#</a> 1、往 Vue实例 中注入方法</h3><p><code>plugins/vue-inject.js:</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$myInjectedFunction</span> <span class="token operator">=</span> <span class="token parameter">string</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is an example&#39;</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>nuxt.config.js:</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;~/plugins/vue-inject.js&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$myInjectedFunction</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2、向-context-中注入方法" tabindex="-1"><a class="header-anchor" href="#_2、向-context-中注入方法" aria-hidden="true">#</a> 2、向 context 中注入方法</h3><p><code>plugins/ctx-inject.js:</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> app <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function-variable function">myInjectedFunction</span> <span class="token operator">=</span> <span class="token parameter">string</span> <span class="token operator">=&gt;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Okay, another function&#39;</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">asyncData</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  context<span class="token punctuation">.</span>app<span class="token punctuation">.</span><span class="token function">myInjectedFunction</span><span class="token punctuation">(</span><span class="token string">&#39;ctx!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、同时向vue实例、context、vuex注入" tabindex="-1"><a class="header-anchor" href="#_3、同时向vue实例、context、vuex注入" aria-hidden="true">#</a> 3、同时向Vue实例、context、Vuex注入</h3><p>利用plugin导出函数的第二个参数 <code>inject</code><br><code>plugins/combined-inject.js:</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> app <span class="token punctuation">}</span><span class="token punctuation">,</span> inject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&#39;myInjectedFunction&#39;</span><span class="token punctuation">,</span> <span class="token parameter">string</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;That was easy!&#39;</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在Vue实例中通过<code>$方法名</code>调用<br> Vuex的 actions/mutations 方法中的 this 可以调用 myInjectedFunction 方法</p><h2 id="store" tabindex="-1"><a class="header-anchor" href="#store" aria-hidden="true">#</a> store</h2><p>拆分文件模块时，必须使用箭头函数<br> 我更喜欢根据功能划分文件而不是划分成 <code>state.js,actions.js,mutations.js和getters.js</code><code>store/todo.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">state</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    state<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      text<span class="token punctuation">,</span>
      <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用mutations中的方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span><span class="token function">MapMutations</span><span class="token punctuation">(</span><span class="token string">&#39;toto&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;add&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// 若是调用 store/index 中的方法，</span>
<span class="token comment">// ...MapMutations([&#39;add&#39;])</span>
<span class="token comment">// 或</span>
<span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">add</span><span class="token operator">:</span> <span class="token string">&#39;todos/add&#39;</span> <span class="token comment">// 可重命名</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fetch-方法" tabindex="-1"><a class="header-anchor" href="#fetch-方法" aria-hidden="true">#</a> fetch 方法</h3><p>fetch 方法会在渲染页面前被调用，作用是填充状态树 (store) 数据</p>`,39);function h(g,b){const a=i("ExternalLinkIcon");return p(),o("div",null,[u,r,n("p",null,[s("该配置项用于配置应用默认的 meta 标签。 Nuxt.js 使用了 "),n("a",d,[s("vue-meta"),e(a)]),s(" 更新应用的 头部标签(Head) 和 html 属性。"),k,n("a",v,[s("vue-meta 配置文档"),e(a)])]),m])}const j=t(l,[["render",h],["__file","Nuxt.html.vue"]]);export{j as default};
