import{_ as p,p as o,q as e,s as n,R as s,t,Y as c,n as i}from"./framework-e1bed10d.js";const l={},u=n("h1",{id:"「项目初始化」utils",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#「项目初始化」utils","aria-hidden":"true"},"#"),s(" 「项目初始化」Utils")],-1),r=n("h2",{id:"常用库",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#常用库","aria-hidden":"true"},"#"),s(" 常用库")],-1),k={href:"https://www.lodashjs.com/",target:"_blank",rel:"noopener noreferrer"},d={href:"http://momentjs.cn/",target:"_blank",rel:"noopener noreferrer"},m=c(`<h2 id="lang-js" tabindex="-1"><a class="header-anchor" href="#lang-js" aria-hidden="true">#</a> lang.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 判断字符串是否为空
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">strEmpty</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> value <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> value <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 判断数值是否为空
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">numEmpty</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">strEmpty</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> value <span class="token operator">===</span> <span class="token number">0</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 回显变量
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">showValue</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> fixed</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strEmpty</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;--&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 将传入变量（有可能为空、非数值）保留n位小数
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">toFixed</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> decimals <span class="token operator">=</span> <span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strEmpty</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> &#39;<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> value<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span>decimals<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 判断字符串中是否包含字母
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">hasLetter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token keyword">in</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> asc <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>asc <span class="token operator">&gt;=</span> <span class="token number">65</span> <span class="token operator">&amp;&amp;</span> asc <span class="token operator">&lt;=</span> <span class="token number">90</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>asc <span class="token operator">&gt;=</span> <span class="token number">97</span> <span class="token operator">&amp;&amp;</span> asc <span class="token operator">&lt;=</span> <span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 将小数的经纬度转化成度分秒
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">formatDegree</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> isLng<span class="token punctuation">,</span> extra <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// returnObj：返回度分秒</span>
  <span class="token comment">// second：是否返回秒</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> returnObj <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> second <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">=</span> extra
  <span class="token keyword">const</span> absValue <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> v1 <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>absValue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 度</span>
  <span class="token keyword">const</span> v2 <span class="token operator">=</span> second <span class="token operator">?</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>absValue <span class="token operator">-</span> v1<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>absValue <span class="token operator">-</span> v1<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">// 分</span>
  <span class="token keyword">const</span> v3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>absValue <span class="token operator">-</span> v1<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3600</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 秒</span>
  <span class="token comment">// eslint-disable-next-line no-nested-ternary</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>returnObj<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">degree</span><span class="token operator">:</span> v1<span class="token punctuation">,</span>
    <span class="token literal-property property">minute</span><span class="token operator">:</span> v2<span class="token punctuation">,</span>
    <span class="token literal-property property">second</span><span class="token operator">:</span> v3<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">°</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>second <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v3<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token punctuation">(</span>isLng <span class="token operator">?</span> <span class="token string">&#39;E&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;N&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> isLng <span class="token operator">?</span> <span class="token string">&#39;W&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;S&#39;</span>
    <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 将度分秒转化成小数的经纬度
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">formatTransform</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">,</span> arg3<span class="token punctuation">,</span> arg4</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arg <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>arg1<span class="token punctuation">)</span> <span class="token operator">+</span> arg2 <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">+</span> arg3 <span class="token operator">/</span> <span class="token number">3600</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arg4 <span class="token operator">===</span> <span class="token string">&#39;W&#39;</span> <span class="token operator">||</span> arg4 <span class="token operator">===</span> <span class="token string">&#39;S&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">-</span>arg<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 将常量中的对象常量转换为数组（用于下拉框）
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> constantObj：传入的对象（<span class="token punctuation">{</span> name: <span class="token punctuation">{</span> value: &#39;&#39;, text: &#39;&#39; <span class="token punctuation">}</span> <span class="token punctuation">}</span>）
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">addAll：是否添加全部</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">objectToOptions</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">constantObj<span class="token punctuation">,</span> addAll <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> _options <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>constantObj<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>addAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> allItem <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;全部&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    _options<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>allItem<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> _options
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 通过value获取对应常量中的匹配项（默认返回text）
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">options：传入的常量格式</span>
 * 格式一：[<span class="token punctuation">{</span> [name]: <span class="token punctuation">{</span> value: &#39;&#39;, text: &#39;&#39; <span class="token punctuation">}</span> <span class="token punctuation">}</span>]
 * 格式二：[<span class="token punctuation">{</span> value: &#39;&#39;, text: &#39;&#39; <span class="token punctuation">}</span>]
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">value：要查找的value</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">keyName：要返回的值对应的key</span>
 * returnObj 为 true 时 keyName 无效
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">returnObj：是否返回匹配上的对象</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getOptionsMatch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> value<span class="token punctuation">,</span> extra <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> keyName <span class="token operator">=</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span> valueName <span class="token operator">=</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">,</span> returnObj <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token operator">=</span> extra <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">const</span> _options <span class="token operator">=</span> <span class="token function">isArray</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token operator">?</span> options <span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> _options<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">[</span>valueName<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">===</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>returnObj<span class="token punctuation">)</span> <span class="token keyword">return</span> res
  <span class="token keyword">return</span> res<span class="token punctuation">[</span>keyName<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&#39;--&#39;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 获取DOM
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">$</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">selector</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 获取缩放比例
 * 物体宽高：width, height
 * 容奇宽高：boxWidth, boxHeight
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getScale</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> boxWidth<span class="token punctuation">,</span> boxHeight</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> scale <span class="token operator">=</span> width <span class="token operator">/</span> height
  <span class="token keyword">const</span> boxScale <span class="token operator">=</span> boxWidth <span class="token operator">/</span> boxHeight
  <span class="token keyword">if</span> <span class="token punctuation">(</span>boxScale <span class="token operator">&gt;</span> scale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> boxHeight <span class="token operator">/</span> height
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> boxWidth <span class="token operator">/</span> width
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dateformater-js-依赖moment-js" tabindex="-1"><a class="header-anchor" href="#dateformater-js-依赖moment-js" aria-hidden="true">#</a> dateFormater.js（依赖<em>moment.js</em>）</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> moment <span class="token keyword">from</span> <span class="token string">&#39;moment&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> strEmpty<span class="token punctuation">,</span> numEmpty <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./lang&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 日期格式类型</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">DATE_FORMAT_TYPE</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">YMD</span><span class="token operator">:</span> <span class="token string">&#39;YYYY-MM-DD&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 年月日</span>
  <span class="token constant">YMDH</span><span class="token operator">:</span> <span class="token string">&#39;YYYY-MM-DD HH&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 年月日-时</span>
  <span class="token constant">YMDHM</span><span class="token operator">:</span> <span class="token string">&#39;YYYY-MM-DD HH:mm&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 年月日-时分</span>
  <span class="token constant">YMDHMS</span><span class="token operator">:</span> <span class="token string">&#39;YYYY-MM-DD HH:mm:ss&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 年月日-时分秒</span>
  <span class="token constant">YMD_START</span><span class="token operator">:</span> <span class="token string">&#39;YYYY-MM-DD 00:00:00&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">YMD_END</span><span class="token operator">:</span> <span class="token string">&#39;YYYY-MM-DD 23:59:59&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 将时间对象转换成易读格式（YYYY年-MM月-DD日 HH时mm分ss秒）
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">dateFormat</span><span class="token punctuation">(</span><span class="token parameter">date <span class="token operator">=</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formatString <span class="token operator">=</span> <span class="token constant">DATE_FORMAT_TYPE</span><span class="token punctuation">.</span><span class="token constant">YMDHMS</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>formatString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span> 时长格式化（将一段时长转换为几年几月几日几分几时几秒的格式）
 * <span class="token keyword">@val</span> 传入的时长
 * <span class="token keyword">@type</span> 传入时长的单位（years/months/weeks/days/hours/minutes/seconds）
 * <span class="token keyword">@placeholder</span> 数值为空时的占位符
 * <span class="token keyword">@notShow</span> 列表，不显示的单位
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">formatDuration</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  value<span class="token punctuation">,</span>
  type<span class="token punctuation">,</span>
  placeholder <span class="token operator">=</span> <span class="token string">&#39;--&#39;</span><span class="token punctuation">,</span>
  notShow <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  defaultUnit <span class="token operator">=</span> <span class="token string">&#39;h&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strEmpty</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> placeholder<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> value
  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>defaultUnit<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token keyword">let</span> years <span class="token operator">=</span> moment<span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">years</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  years <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">numEmpty</span><span class="token punctuation">(</span>years<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notShow<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>years<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">y</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> days <span class="token operator">=</span> moment<span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">days</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  days <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">numEmpty</span><span class="token punctuation">(</span>days<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notShow<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>days<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">d</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> hours <span class="token operator">=</span> moment<span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  hours <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">numEmpty</span><span class="token punctuation">(</span>hours<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notShow<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hours<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">h</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> minutes <span class="token operator">=</span> moment<span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">minutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  minutes <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">numEmpty</span><span class="token punctuation">(</span>minutes<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notShow<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>minutes<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">m</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> seconds <span class="token operator">=</span> moment<span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  seconds <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">strEmpty</span><span class="token punctuation">(</span>seconds<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>notShow<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>seconds<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">s</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>years<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>days<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hours<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>minutes<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>seconds<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 毫秒级时间戳转换成易读格式（YYYY年-MM月-DD日 HH时mm分ss秒）
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">formateMilliseconds</span><span class="token punctuation">(</span><span class="token parameter">milliseconds<span class="token punctuation">,</span> formateString <span class="token operator">=</span> <span class="token constant">DATE_FORMAT_TYPE</span><span class="token punctuation">.</span><span class="token constant">YMDHMS</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>formateString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 秒级时间戳转换成易读格式（YYYY年-MM月-DD日 HH时mm分ss秒）
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">formateUnixTime</span><span class="token punctuation">(</span><span class="token parameter">seconds<span class="token punctuation">,</span> formateString <span class="token operator">=</span> <span class="token constant">DATE_FORMAT_TYPE</span><span class="token punctuation">.</span><span class="token constant">YMDHMS</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> moment<span class="token punctuation">.</span><span class="token function">unix</span><span class="token punctuation">(</span>seconds<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>formateString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 当前时间转换成易读格式（YYYY年-MM月-DD日 HH时mm分ss秒）
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">formateNow</span><span class="token punctuation">(</span><span class="token parameter">formateString <span class="token operator">=</span> <span class="token constant">DATE_FORMAT_TYPE</span><span class="token punctuation">.</span><span class="token constant">YMDHMS</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>formateString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 将易读格式时间字符串（YYYY年-MM月-DD日 HH时mm分ss秒）转换成时间戳（秒级）
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">dateStrToUnix</span><span class="token punctuation">(</span><span class="token parameter">dateString</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span>dateString<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 将易读格式时间字符串（YYYY年-MM月-DD日 HH时mm分ss秒）转换成时间戳（毫秒级）
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">dateStrToMillisecond</span><span class="token punctuation">(</span><span class="token parameter">dateString</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span>dateString<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 时间选择器禁用函数（禁用今天之前的日期）
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">disabledDate</span><span class="token punctuation">(</span><span class="token parameter">current</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> current <span class="token operator">&amp;&amp;</span> current <span class="token operator">&lt;</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startOf</span><span class="token punctuation">(</span><span class="token string">&#39;day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 计算时间戳差值
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">timeDiff</span><span class="token punctuation">(</span><span class="token parameter">startTime<span class="token punctuation">,</span> endTime</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">dateStrToUnix</span><span class="token punctuation">(</span>endTime<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">dateStrToUnix</span><span class="token punctuation">(</span>startTime<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 获取一段时间前/后
 * <span class="token keyword">@note</span> 这与 getSomeTimeBefore 完全相同，只是不减去时间，而是增加时间。
 * <span class="token keyword">@num</span> 取负值为前，正值为后
 * <span class="token keyword">@type</span> 取值：years	y
              quarters	Q
              months	M
              weeks	w
              days	d
              hours	h
              minutes	m
              seconds	s
              milliseconds	ms
 * <span class="token keyword">@eg</span> 一年前/一月前/一周前...，一年后/一月后/一周后...
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getAfewDaysAgo</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> formateString <span class="token operator">=</span> <span class="token constant">DATE_FORMAT_TYPE</span><span class="token punctuation">.</span><span class="token constant">YMDHMS</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>formateString<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 获取一段时间前/后
 * <span class="token keyword">@note</span> 这与 getAfewDaysAgo 完全相同，只是不增加时间，而是减去时间。
 * <span class="token keyword">@num</span> 取负值为后，正值为前
 * <span class="token keyword">@type</span> 取值：years	y
              quarters	Q
              months	M
              weeks	w
              days	d
              hours	h
              minutes	m
              seconds	s
              milliseconds	ms
 * <span class="token keyword">@eg</span> 一年前/一月前/一周前...，一年后/一月后/一周后...
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getSomeTimeBefore</span><span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> type<span class="token punctuation">,</span> formateString <span class="token operator">=</span> <span class="token constant">DATE_FORMAT_TYPE</span><span class="token punctuation">.</span><span class="token constant">YMDHMS</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>formateString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 获取一段时间的开始
 * <span class="token keyword">@timeType</span> year/quarter/month/week/day/hour/minute/second
 * <span class="token keyword">@eg</span> 某年/某季度/某月/某星期/某天的开始...
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getSomeTimeStart</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> timeType<span class="token punctuation">,</span> formateString <span class="token operator">=</span> <span class="token constant">DATE_FORMAT_TYPE</span><span class="token punctuation">.</span><span class="token constant">YMDHMS</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startOf</span><span class="token punctuation">(</span>timeType<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>formateString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 获取一段时间的结束
 * <span class="token keyword">@timeType</span> year/quarter/month/week/day/hour/minute/second
 * <span class="token keyword">@eg</span> 某年/某季度/某月/某星期/某天的结束...
 */</span>
 <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getSomeTimeEnd</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> timeType<span class="token punctuation">,</span> formateString <span class="token operator">=</span> <span class="token constant">DATE_FORMAT_TYPE</span><span class="token punctuation">.</span><span class="token constant">YMDHMS</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endOf</span><span class="token punctuation">(</span>timeType<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>formateString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="storage-js" tabindex="-1"><a class="header-anchor" href="#storage-js" aria-hidden="true">#</a> storage.js</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> isObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> storage <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">//设置缓存</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">expires</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">startTime</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//记录何时将值存入缓存，毫秒级</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">//将obj和传进来的params合并</span>
    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>expires<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//如果options.expires设置了的话</span>
      <span class="token comment">//以options.name为key，options为值放进去</span>
      localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">//如果options.expires没有设置，就判断一下value的类型</span>
      <span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//如果value是对象或者数组对象的类型，就先用JSON.stringify转一下，再存进去</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;[object Object]&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        options<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;[object Array]&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        options<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>name<span class="token punctuation">,</span> options<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">//拿到缓存</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> item <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//先将拿到的试着进行json转为对象的形式</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      item <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//如果不行就不是json的字符串，就直接返回</span>
      <span class="token keyword">return</span> item<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//如果有startTime的值，说明设置了失效时间</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>startTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//何时将值取出减去刚存入的时间，与item.expires比较，如果大于就是过期了，如果小于或等于就还没过期</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>date <span class="token operator">-</span> item<span class="token punctuation">.</span>startTime <span class="token operator">&gt;</span> item<span class="token punctuation">.</span>expires<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//缓存过期，清除缓存，返回false</span>
        localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">//缓存未过期，返回值</span>
      <span class="token keyword">return</span> item<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//如果没有设置失效时间，直接返回值</span>
    <span class="token keyword">return</span> item<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">//移除缓存</span>
  <span class="token function-variable function">remove</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">//移出全部缓存</span>
  <span class="token function-variable function">clear</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> storage<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function v(b,y){const a=i("ExternalLinkIcon");return o(),e("div",null,[u,r,n("ul",null,[n("li",null,[n("a",k,[s("lodash.js：一个一致性、模块化、高性能的 JavaScript 实用工具库"),t(a)])]),n("li",null,[n("a",d,[s("moment.js：JavaScript 日期处理类库"),t(a)])])]),m])}const w=p(l,[["render",v],["__file","Utils.html.vue"]]);export{w as default};
