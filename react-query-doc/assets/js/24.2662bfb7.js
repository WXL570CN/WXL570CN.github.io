(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{348:function(t,e,a){"use strict";a.r(e);var s=a(7),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"useinfinitequery"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#useinfinitequery"}},[t._v("#")]),t._v(" useInfiniteQuery")]),t._v(" "),a("div",{staticClass:"language-tsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-tsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  fetchNextPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  fetchPreviousPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  hasNextPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  hasPreviousPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  isFetchingNextPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  isFetchingPreviousPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useInfiniteQuery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  queryKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("queryFn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" pageParam "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchPage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pageParam"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getNextPageParam")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" allPages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" lastPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextCursor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getPreviousPageParam")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" allPages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" firstPage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prevCursor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("选项")])]),t._v(" "),a("p",[t._v("useInfiniteQuery 的选项与 useQuery 挂钩相同，但增加了以下内容：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("queryFn: (context: QueryFunctionContext) => Promise<TData>")]),t._v(" "),a("ul",[a("li",[t._v("必需，但前提是没有定义默认查询函数 defaultQueryFn")]),t._v(" "),a("li",[t._v("查询将用于请求数据的函数。")]),t._v(" "),a("li",[t._v("接收 QueryFunctionContext")]),t._v(" "),a("li",[t._v("必须返回一个将解析数据或抛出错误的承诺。")]),t._v(" "),a("li",[t._v("如果需要在下面的道具中使用，请确保返回数据和 pageParam。")])])]),t._v(" "),a("li",[a("code",[t._v("getNextPageParam: (lastPage, allPages) => 未知 |不明确的")]),t._v(" "),a("ul",[a("li",[t._v("当为这个查询接收到新数据时，这个函数接收无限数据列表的最后一页和所有页面的完整数组。")]),t._v(" "),a("li",[t._v("它应该返回一个变量，该变量将作为最后一个可选参数传递给您的查询函数。")]),t._v(" "),a("li",[t._v("返回 undefined 表示没有下一页可用。")])])]),t._v(" "),a("li",[a("code",[t._v("getPreviousPageParam: (firstPage, allPages) => 未知 |不明确的")]),t._v(" "),a("ul",[a("li",[t._v("当为这个查询接收到新数据时，这个函数接收无限数据列表的第一页和所有页面的完整数组。")]),t._v(" "),a("li",[t._v("它应该返回一个变量，该变量将作为最后一个可选参数传递给您的查询函数。")]),t._v(" "),a("li",[t._v("返回 undefined 表示没有前一页可用。")])])])]),t._v(" "),a("p",[a("strong",[t._v("Returns")])]),t._v(" "),a("p",[t._v("useInfiniteQuery 的返回属性与 useQuery 挂钩相同，除了以下内容和 isRefetching 中的细微差别：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("数据页：TData[]")]),t._v(" "),a("ul",[a("li",[t._v("包含所有页面的数组。")])])]),t._v(" "),a("li",[a("code",[t._v("data.pageParams：未知[]")]),t._v(" "),a("ul",[a("li",[t._v("包含所有页面参数的数组。")])])]),t._v(" "),a("li",[a("code",[t._v("isFetchingNextPage: 布尔值")]),t._v(" "),a("ul",[a("li",[t._v("使用 fetchNextPage 获取下一页时将为真。")])])]),t._v(" "),a("li",[a("code",[t._v("isFetchingPreviousPage: 布尔值")]),t._v(" "),a("ul",[a("li",[t._v("使用 fetchPreviousPage 获取上一页时将为真。")])])]),t._v(" "),a("li",[a("code",[t._v("fetchNextPage: (选项?: FetchNextPageOptions) => Promise<UseInfiniteQueryResult>")]),t._v(" "),a("ul",[a("li",[t._v("此函数允许您获取结果的下“页面”。")]),t._v(" "),a("li",[t._v("options.pageParam: unknown 允许您手动指定页面参数，而不是使用 getNextPageParam。")]),t._v(" "),a("li",[t._v("options.cancelRefetch：boolean 如果设置为 true，重复调用 fetchNextPage 每次都会调用 fetchPage，无论之前的调用是否已经解决。此外，先前调用的结果将被忽略。如果设置为 false，重复调用 fetchNextPage 将不会有任何效果，直到第一次调用已解决。默认为真。")])])]),t._v(" "),a("li",[a("code",[t._v("fetchPreviousPage: (选项?: FetchPreviousPageOptions) => Promise<UseInfiniteQueryResult>")]),t._v(" "),a("ul",[a("li",[t._v("此函数允许您获取前“页面”的结果。")]),t._v(" "),a("li",[t._v("options.pageParam: unknown 允许您手动指定页面参数，而不是使用 getPreviousPageParam。")]),t._v(" "),a("li",[t._v("options.cancelRefetch：与 fetchNextPage 相同的布尔值。")])])]),t._v(" "),a("li",[a("code",[t._v("hasNextPage: 布尔值")]),t._v(" "),a("ul",[a("li",[t._v("如果有下一页要获取（通过 getNextPageParam 选项知道），这将为真。")])])]),t._v(" "),a("li",[a("code",[t._v("hasPreviousPage: 布尔值")]),t._v(" "),a("ul",[a("li",[t._v("如果有上一页要获取（通过 getPreviousPageParam 选项知道），这将为真。")])])]),t._v(" "),a("li",[a("code",[t._v("isRefetching：布尔值")]),t._v(" "),a("ul",[a("li",[t._v("每当后台重新获取正在进行时为真，这不包括初始加载或获取下一页或上一页")]),t._v(" "),a("li",[t._v("与 isFetching && !isLoading && !isFetchingNextPage && !isFetchingPreviousPage 相同")])])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tanstack/query/tree/main/docs/react/reference/useInfiniteQuery.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 GitHub 上编辑"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);