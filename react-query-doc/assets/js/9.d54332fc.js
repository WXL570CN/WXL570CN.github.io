(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{332:function(t,s,a){"use strict";a.r(s);var n=a(7),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"queries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queries"}},[t._v("#")]),t._v(" Queries")]),t._v(" "),a("h2",{attrs:{id:"查询基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询基础"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://tanstack.com/query/latest/docs/react/guides/queries#query-basics",target:"_blank",rel:"noopener noreferrer"}},[t._v("查询基础"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("查询是对绑定到唯一键的异步数据源的声明性依赖。查询可以与任何基于 Promise 的方法（包括 GET 和 POST 方法）一起使用以从服务器获取数据。如果您的方法修改了服务器上的数据，我们建议改用 Mutations。")]),t._v(" "),a("p",[t._v("要在您的组件或自定义挂钩中订阅查询，请至少调用 useQuery 挂钩：")]),t._v(" "),a("ul",[a("li",[t._v("查询的唯一键")]),t._v(" "),a("li",[t._v("返回承诺的函数：\n"),a("ul",[a("li",[t._v("解决数据，或")]),t._v(" "),a("li",[t._v("抛出错误")])])])]),t._v(" "),a("div",{staticClass:"language-tsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-tsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useQuery "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@tanstack/react-query'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useQuery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" queryKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'todos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queryFn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fetchTodoList "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("您提供的唯一密钥在内部用于在整个应用程序中重新获取、缓存和共享您的查询。")]),t._v(" "),a("p",[t._v("useQuery 返回的查询结果包含有关模板化和任何其他数据用法所需的查询的所有信息：")]),t._v(" "),a("div",{staticClass:"language-tsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-tsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useQuery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" queryKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'todos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queryFn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fetchTodoList "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("结果对象包含一些非常重要的状态，您需要了解这些状态才能提高工作效率。查询在任何给定时刻只能处于以下状态之一：")]),t._v(" "),a("ul",[a("li",[t._v("isLoading or status === 'loading' - 查询还没有数据")]),t._v(" "),a("li",[t._v("isError or status === 'error' - 查询遇到错误")]),t._v(" "),a("li",[t._v("isSuccess or status === 'success' - 查询成功，数据可用")])]),t._v(" "),a("p",[t._v("除了这些主要状态之外，还可以根据查询的状态获得更多信息：")]),t._v(" "),a("ul",[a("li",[t._v("error - 如果查询处于 isError 状态，则错误可通过 error 属性获得。")]),t._v(" "),a("li",[t._v("data - 如果查询处于 isSuccess 状态，则数据可通过 data 属性获得。")])]),t._v(" "),a("p",[t._v("对于大多数查询，检查 isLoading 状态通常就足够了，然后是 isError 状态，最后假设数据可用并呈现成功状态：")]),t._v(" "),a("div",{staticClass:"language-tsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-tsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Todos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" isLoading"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useQuery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    queryKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'todos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    queryFn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fetchTodoList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isLoading"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Loading...")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Error: ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We can assume by this point that `isSuccess === true`  return (    <ul>      {data.map((todo) => (        <li key={todo.id}>{todo.title}</li>      ))}    </ul>  )}")]),t._v("\n")])])]),a("p",[t._v("如果布尔值不是你的菜，你也可以随时使用状态状态：")]),t._v(" "),a("div",{staticClass:"language-tsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-tsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Todos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useQuery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    queryKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'todos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    queryFn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fetchTodoList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'loading'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Loading...")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Error: ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// also status === 'success', but \"else\" logic works, too  return (    <ul>      {data.map((todo) => (        <li key={todo.id}>{todo.title}</li>      ))}    </ul>  )}")]),t._v("\n")])])]),a("p",[t._v("如果您在访问数据之前检查了加载和错误，TypeScript 也会正确地缩小数据类型。")]),t._v(" "),a("h3",{attrs:{id:"获取状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取状态"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://tanstack.com/query/latest/docs/react/guides/queries#fetchstatus",target:"_blank",rel:"noopener noreferrer"}},[t._v("获取状态"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("除了状态字段，结果对象，您还将获得一个额外的 fetchStatus 属性，具有以下选项：")]),t._v(" "),a("ul",[a("li",[t._v("fetchStatus === 'fetching' - 查询当前正在获取。")]),t._v(" "),a("li",[t._v("fetchStatus === 'paused' - 查询想要获取，但已暂停。在网络模式指南中阅读更多相关信息。")]),t._v(" "),a("li",[t._v("fetchStatus === 'idle' - 查询目前没有做任何事情。")])]),t._v(" "),a("h3",{attrs:{id:"为什么是两个不同的州"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么是两个不同的州"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://tanstack.com/query/latest/docs/react/guides/queries#why-two-different-states",target:"_blank",rel:"noopener noreferrer"}},[t._v("为什么是两个不同的州？"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("后台重新获取和 stale-while-revalidate 逻辑使 status 和 fetchStatus 的所有组合成为可能。例如：")]),t._v(" "),a("ul",[a("li",[t._v("成功状态的查询通常处于空闲 fetchStatus，但如果发生后台重新获取，它也可能处于获取状态。")]),t._v(" "),a("li",[t._v("挂载但没有数据的查询通常处于加载状态和获取 fetchStatus，但如果没有网络连接，它也可能会暂停。")])]),t._v(" "),a("p",[t._v("因此请记住，查询可以处于加载状态而无需实际获取数据。根据经验：")]),t._v(" "),a("ul",[a("li",[t._v("状态提供有关数据的信息：我们有没有？")]),t._v(" "),a("li",[t._v("fetchStatus 提供有关 queryFn 的信息：它是否正在运行？")])]),t._v(" "),a("h2",{attrs:{id:"进一步阅读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进一步阅读"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://tanstack.com/query/latest/docs/react/guides/queries#further-reading",target:"_blank",rel:"noopener noreferrer"}},[t._v("进一步阅读"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("有关执行状态检查的替代方法，请查看社区资源。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tanstack/query/tree/main/docs/react/guides/queries.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 GitHub 上编辑"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);