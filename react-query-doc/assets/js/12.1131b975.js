(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{336:function(t,e,a){"use strict";a.r(e);var r=a(7),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"network-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#network-mode"}},[t._v("#")]),t._v(" Network Mode")]),t._v(" "),a("p",[t._v("TanStack Query 提供了三种不同的网络模式来区分在没有网络连接的情况下 Queries 和 Mutations 的行为方式。可以为每个查询/突变单独设置此模式，或通过查询/突变默认值全局设置。")]),t._v(" "),a("p",[t._v("由于 TanStack Query 最常用于结合数据获取库进行数据获取，因此默认网络模式为在线。")]),t._v(" "),a("p",[t._v("[")]),t._v(" "),a("h2",{attrs:{id:"网络方式-在线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络方式-在线"}},[t._v("#")]),t._v(" 网络方式：在线")]),t._v(" "),a("p",[t._v("](https://tanstack.com/query/latest/docs/react/guides/network-mode#network-mode-online)")]),t._v(" "),a("p",[t._v("在这种模式下，除非您有网络连接，否则不会触发查询和变更。这是默认模式。如果为查询启动了提取，它将始终保持在由于没有网络连接而无法进行提取时所处的状态（加载、错误、成功）。但是，还会额外公开 fetchStatus。这可以是：")]),t._v(" "),a("ul",[a("li",[t._v("获取：queryFn 确实在执行 - 请求正在进行中。")]),t._v(" "),a("li",[t._v("暂停：查询未执行 - 暂停，直到您再次建立连接")]),t._v(" "),a("li",[t._v("空闲：查询未获取且未暂停")])]),t._v(" "),a("p",[t._v("标志 isFetching 和 isPaused 派生自此状态并为方便起见而公开。")]),t._v(" "),a("blockquote",[a("p",[t._v("请记住，检查加载状态可能不足以显示加载微调器。查询可以处于 state: 'loading'，但 fetchStatus: 'paused' 如果它们是第一次安装，并且您没有网络连接。")])]),t._v(" "),a("p",[t._v("如果一个查询因为你在线而运行，但是你在获取仍在进行时离线，TanStack Query 也会暂停重试机制。一旦您重新获得网络连接，暂停的查询将继续运行。这独立于 refetchOnReconnect（在此模式下也默认为 true），因为它不是重新获取，而是继续。如果查询在此期间被取消，则不会继续。")]),t._v(" "),a("p",[t._v("[")]),t._v(" "),a("h2",{attrs:{id:"网络模式-始终"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络模式-始终"}},[t._v("#")]),t._v(" 网络模式：始终")]),t._v(" "),a("p",[t._v("](https://tanstack.com/query/latest/docs/react/guides/network-mode#network-mode-always)")]),t._v(" "),a("p",[t._v("在这种模式下，TanStack Query 将始终获取并忽略在线/离线状态。如果您在不需要活动网络连接来使查询工作的环境中使用 TanStack 查询，这可能是您想要选择的模式 - 例如如果您只是从 AsyncStorage 读取数据，或者您只是想从 queryFn 返回 Promise.resolve(5)。")]),t._v(" "),a("ul",[a("li",[t._v("查询永远不会因为您没有网络连接而暂停。")]),t._v(" "),a("li",[t._v("重试也不会暂停 - 如果失败，您的查询将进入错误状态。")]),t._v(" "),a("li",[t._v("refetchOnReconnect 在此模式下默认为 false，因为重新连接到网络不再是应重新获取陈旧查询的良好指标。如果需要，您仍然可以打开它。")])]),t._v(" "),a("p",[t._v("[")]),t._v(" "),a("h2",{attrs:{id:"网络模式-offlinefirst"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络模式-offlinefirst"}},[t._v("#")]),t._v(" 网络模式：offlineFirst")]),t._v(" "),a("p",[t._v("](https://tanstack.com/query/latest/docs/react/guides/network-mode#network-mode-offlinefirst)")]),t._v(" "),a("p",[t._v("此模式是前两个选项之间的中间地带，其中 TanStack Query 将运行 queryFn 一次，但随后暂停重试。如果您有一个 serviceWorker 可以像在离线优先 PWA 中那样拦截缓存​​请求，或者如果您通过 Cache-Control 标头使用 HTTP 缓存，这将非常方便。")]),t._v(" "),a("p",[t._v("在这些情况下，第一次提取可能会成功，因为它来自离线存储/缓存。但是，如果存在缓存未命中，网络请求将发出并失败，在这种情况下，此模式的行为类似于在线查询 - 暂停重试。")]),t._v(" "),a("p",[t._v("[")]),t._v(" "),a("h2",{attrs:{id:"开发者工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发者工具"}},[t._v("#")]),t._v(" 开发者工具")]),t._v(" "),a("p",[t._v("](https://tanstack.com/query/latest/docs/react/guides/network-mode#devtools)")]),t._v(" "),a("p",[t._v("TanStack Query Devtools 将在暂停状态下显示查询，如果它们正在获取，但没有网络连接。还有一个用于模拟离线行为的切换按钮。请注意，此按钮实际上不会干扰您的网络连接（您可以在浏览器开发者工具中这样做），但它会将 OnlineManager 设置为离线状态。")]),t._v(" "),a("p",[t._v("[")]),t._v(" "),a("h2",{attrs:{id:"签名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#签名"}},[t._v("#")]),t._v(" 签名")]),t._v(" "),a("p",[t._v("](https://tanstack.com/query/latest/docs/react/guides/network-mode#signature)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("网络模式：'在线' | '总是' | '离线优先'")]),t._v(" "),a("ul",[a("li",[t._v("选修的")]),t._v(" "),a("li",[t._v("默认为“在线”")])])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tanstack/query/tree/main/docs/react/guides/network-mode.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 GitHub 上编辑"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);