(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{358:function(t,a,s){"use strict";s.r(a);var n=s(7),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"mutationcache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutationcache"}},[t._v("#")]),t._v(" MutationCache")]),t._v(" "),s("p",[t._v("MutationCache 是突变的存储。")]),t._v(" "),s("p",[s("strong",[t._v("通常，您不会直接与 MutationCache 交互，而是使用 QueryClient。")])]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" MutationCache "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@tanstack/react-query'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mutationCache "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MutationCache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onError")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" error "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onSuccess")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("它可用的方法有：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://tanstack.com/query/latest/docs/react/reference/MutationCache#mutationcachegetall",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("得到所有")]),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://tanstack.com/query/latest/docs/react/reference/MutationCache#mutationcachesubscribe",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("订阅")]),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://tanstack.com/query/latest/docs/react/reference/MutationCache#mutationcacheclear",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("清除")]),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("strong",[t._v("选项")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("onError?: (error: unknown, variables: unknown, context: unknown, mutation: Mutation) => Promise<未知> |未知")]),t._v(" "),s("ul",[s("li",[t._v("选修的")]),t._v(" "),s("li",[t._v("如果某些突变遇到错误，将调用此函数。")]),t._v(" "),s("li",[t._v("如果您从中返回一个 Promise，它将被等待")])])]),t._v(" "),s("li",[s("code",[t._v("onSuccess?: (data: unknown, variables: unknown, context: unknown, mutation: Mutation) => Promise<未知> |未知")]),t._v(" "),s("ul",[s("li",[t._v("选修的")]),t._v(" "),s("li",[t._v("如果某些突变成功，将调用此函数。")]),t._v(" "),s("li",[t._v("如果您从中返回一个 Promise，它将被等待")])])]),t._v(" "),s("li",[s("code",[t._v("onSettled?: (data: unknown | undefined, error: unknown | null, variables: unknown, context: unknown, mutation: Mutation) => 承诺<未知> |未知")]),t._v(" "),s("ul",[s("li",[t._v("选修的")]),t._v(" "),s("li",[t._v("如果某些突变已解决（成功或错误），将调用此函数。")]),t._v(" "),s("li",[t._v("如果您从中返回一个 Promise，它将被等待")])])]),t._v(" "),s("li",[s("code",[t._v("onMutate?: (variables: unknown, mutation: Mutation) => Promise<unknown> |未知")]),t._v(" "),s("ul",[s("li",[t._v("选修的")]),t._v(" "),s("li",[t._v("这个函数将在一些突变执行之前被调用。")]),t._v(" "),s("li",[t._v("如果您从中返回一个 Promise，它将被等待")])])])]),t._v(" "),s("p",[t._v("[")]),t._v(" "),s("h2",{attrs:{id:"全局回调"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局回调"}},[t._v("#")]),t._v(" 全局回调")]),t._v(" "),s("p",[t._v("](https://tanstack.com/query/latest/docs/react/reference/MutationCache#global-callbacks)")]),t._v(" "),s("p",[t._v("MutationCache 上的 onError、onSuccess、onSettled 和 onMutate 回调可用于在全局级别处理这些事件。它们与提供给 QueryClient 的 defaultOptions 不同，因为：")]),t._v(" "),s("ul",[s("li",[t._v("defaultOptions 可以被每个 Mutation 覆盖——全局回调将始终被调用。")]),t._v(" "),s("li",[t._v("onMutate 不允许返回上下文值。")])]),t._v(" "),s("p",[t._v("[")]),t._v(" "),s("h2",{attrs:{id:"突变缓存-getall"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#突变缓存-getall"}},[t._v("#")]),t._v(" "),s("code",[t._v("突变缓存.getAll")])]),t._v(" "),s("p",[t._v("](https://tanstack.com/query/latest/docs/react/reference/MutationCache#mutationcachegetall)")]),t._v(" "),s("p",[t._v("getAll 返回缓存中的所有突变。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意：大多数应用程序通常不需要这，但在极少数情况下需要有关突变的更多信息时可以派上用场")])]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mutations "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mutationCache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Returns")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("突变[]")]),t._v(" "),s("ul",[s("li",[t._v("来自缓存的变异实例")])])])]),t._v(" "),s("p",[t._v("[")]),t._v(" "),s("h2",{attrs:{id:"mutationcache-subscribe-订阅"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutationcache-subscribe-订阅"}},[t._v("#")]),t._v(" "),s("code",[t._v("mutationCache.subscribe 订阅")])]),t._v(" "),s("p",[t._v("](https://tanstack.com/query/latest/docs/react/reference/MutationCache#mutationcachesubscribe)")]),t._v(" "),s("p",[t._v("subscribe 方法可用于订阅整个突变缓存，并获知对缓存的安全/已知更新，例如突变状态更改或突变被更新、添加或删除。")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("callback")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mutation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" unsubscribe "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mutationCache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("选项")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("回调：（突变？：MutationCacheNotifyEvent）=>无效")]),t._v(" "),s("ul",[s("li",[t._v("每当更新时，都会使用突变缓存调用此函数。")])])])]),t._v(" "),s("p",[s("strong",[t._v("Returns")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("退订：功能=>无效")]),t._v(" "),s("ul",[s("li",[t._v("此函数将从突变缓存中取消订阅回调。")])])])]),t._v(" "),s("p",[t._v("[")]),t._v(" "),s("h2",{attrs:{id:"突变缓存-clear"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#突变缓存-clear"}},[t._v("#")]),t._v(" "),s("code",[t._v("突变缓存.clear")])]),t._v(" "),s("p",[t._v("](https://tanstack.com/query/latest/docs/react/reference/MutationCache#mutationcacheclear)")]),t._v(" "),s("p",[t._v("clear 方法可用于完全清除缓存并重新开始。")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[t._v("mutationCache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://github.com/tanstack/query/tree/main/docs/react/reference/MutationCache.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 GitHub 上编辑"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);